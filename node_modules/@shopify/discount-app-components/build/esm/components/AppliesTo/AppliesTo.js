import React, { useEffect } from 'react';
import { Box, BlockStack, Text, ChoiceList } from '@shopify/polaris';
import { useI18n } from '@shopify/react-i18n';
import { AppliesToEligibility } from '../../constants.js';
import styles from './AppliesTo.scss.js';
import { SelectedItemsList } from '../SelectedItemsList/SelectedItemsList.js';

function AppliesTo({
  eligibility,
  selectedItems,
  productSelector,
  collectionSelector
}) {
  const [i18n] = useI18n();
  useEffect(() => {
    if (!productSelector) {
      eligibility.onChange(AppliesToEligibility.Collections);
    } else if (!collectionSelector) {
      eligibility.onChange(AppliesToEligibility.Products);
    }
  }, [productSelector, collectionSelector, eligibility]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, productSelector || collectionSelector ? /*#__PURE__*/React.createElement(Box, {
    paddingBlockEnd: "400"
  }, /*#__PURE__*/React.createElement(BlockStack, {
    gap: "400"
  }, /*#__PURE__*/React.createElement(Text, {
    variant: "headingMd",
    as: "h2"
  }, i18n.translate('DiscountAppComponents.AppliesToCard.title')), /*#__PURE__*/React.createElement(ChoiceList, {
    title: i18n.translate('DiscountAppComponents.AppliesToCard.choiceList.titleProducts'),
    disabled: !productSelector || !collectionSelector,
    titleHidden: true,
    choices: [{
      value: AppliesToEligibility.Products,
      label: i18n.translate('DiscountAppComponents.AppliesToCard.choiceList.products')
    }, {
      value: AppliesToEligibility.Collections,
      label: i18n.translate('DiscountAppComponents.AppliesToCard.choiceList.collections')
    }],
    selected: [eligibility.value],
    onChange: values => eligibility.onChange(values[0])
  }), eligibility.value === AppliesToEligibility.Products && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: styles.SelectedItemsActivator
  }, productSelector), /*#__PURE__*/React.createElement(SelectedItemsList, {
    items: selectedItems.value.map(item => item),
    renderItem: item => /*#__PURE__*/React.createElement("div", null, item.title),
    onRemoveItem: itemId => selectedItems.onChange(selectedItems.value.filter(item => item.id !== itemId))
  })), eligibility.value === AppliesToEligibility.Collections && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: styles.SelectedItemsActivator
  }, collectionSelector), /*#__PURE__*/React.createElement(SelectedItemsList, {
    items: selectedItems.value.map(item => item),
    renderItem: item => /*#__PURE__*/React.createElement("div", null, item.title),
    onRemoveItem: itemId => selectedItems.onChange(selectedItems.value.filter(item => item.id !== itemId))
  })))) : null);
}

export { AppliesTo };
