'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var polaris = require('@shopify/polaris');
var reactI18n = require('@shopify/react-i18n');
var constants = require('../../constants.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const I18N_SCOPE = {
  scope: 'DiscountAppComponents.DiscountApplicationStrategyCard'
};
function DiscountApplicationStrategyCard({
  strategy,
  discountClass
}) {
  const [i18n] = reactI18n.useI18n();
  const handleChange = strategies => strategy.onChange(strategies[0]);
  const isProduct = discountClass === constants.DiscountClass.Product;
  const isOrder = discountClass === constants.DiscountClass.Order;
  const isShipping = discountClass === constants.DiscountClass.Shipping;
  const choices = [...(isProduct || isOrder ? [{
    value: constants.DiscountApplicationStrategy.First,
    label: i18n.translate('first.label', I18N_SCOPE),
    helpText: i18n.translate('first.helpText', I18N_SCOPE)
  }, {
    value: constants.DiscountApplicationStrategy.Maximum,
    label: i18n.translate('maximum.label', I18N_SCOPE),
    helpText: i18n.translate('maximum.helpText', I18N_SCOPE)
  }] : []), ...(isProduct || isShipping ? [{
    value: constants.DiscountApplicationStrategy.All,
    label: i18n.translate('all.label', I18N_SCOPE),
    helpText: i18n.translate('all.helpText', I18N_SCOPE)
  }] : [])];
  return /*#__PURE__*/React__default["default"].createElement(polaris.Box, {
    paddingBlockEnd: "400"
  }, /*#__PURE__*/React__default["default"].createElement(polaris.Card, {
    padding: "400"
  }, /*#__PURE__*/React__default["default"].createElement(polaris.BlockStack, {
    gap: "400"
  }, /*#__PURE__*/React__default["default"].createElement(polaris.Text, {
    variant: "headingMd",
    as: "h2"
  }, i18n.translate('title', I18N_SCOPE)), /*#__PURE__*/React__default["default"].createElement(polaris.ChoiceList, {
    title: i18n.translate('title', I18N_SCOPE),
    titleHidden: true,
    choices: choices,
    selected: [strategy.value],
    onChange: handleChange
  }))));
}

exports.DiscountApplicationStrategyCard = DiscountApplicationStrategyCard;
