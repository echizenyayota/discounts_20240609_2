import React from 'react';
import { useI18n } from '@shopify/react-i18n';
import { Box, Card, BlockStack, Text, List } from '@shopify/polaris';
import { Header } from './components/Header/Header.esnext';
import { AppliesToPurchaseType } from './components/AppliesToPurchaseType/AppliesToPurchaseType.esnext';
import { RecurringPayment } from './components/RecurringPayment/RecurringPayment.esnext';
import { SelectedCountries } from './components/SelectedCountries/SelectedCountries.esnext';
import { MaximumShippingPrice } from './components/MaximumShippingPrice/MaximumShippingPrice.esnext';
import { MinimumRequirements } from './components/MinimumRequirements/MinimumRequirements.esnext';
import { CustomerEligibility } from './components/CustomerEligibility/CustomerEligibility.esnext';
import { UsageLimits } from './components/UsageLimits/UsageLimits.esnext';
import { Combinations } from './components/Combinations/Combinations.esnext';
import { ActiveDates } from './components/ActiveDates/ActiveDates.esnext';
import { Performance } from './components/Performance/Performance.esnext';

/* eslint-disable @shopify/typescript/prefer-pascal-case-enums */
var OptionalSection = /*#__PURE__*/function (OptionalSection) {
  OptionalSection["activeDates"] = "activeDates";
  OptionalSection["additionalDetails"] = "additionalDetails";
  OptionalSection["appliesToPurchaseType"] = "appliesToPurchaseType";
  OptionalSection["combinations"] = "combinations";
  OptionalSection["customerEligibility"] = "customerEligibility";
  OptionalSection["maximumShippingPrice"] = "maximumShippingPrice";
  OptionalSection["minimumRequirements"] = "minimumRequirements";
  OptionalSection["recurringPayment"] = "recurringPayment";
  OptionalSection["selectedCountries"] = "selectedCountries";
  OptionalSection["usageLimits"] = "usageLimits";
  return OptionalSection;
}(OptionalSection || {});
const I18N_SCOPE = {
  scope: 'DiscountAppComponents.SummaryCard'
};
function SummaryCard(props) {
  var _props$additionalDeta;
  const [i18n] = useI18n();
  const showDetailsSection = Object.values(OptionalSection).some(section => props[section]);
  return /*#__PURE__*/React.createElement(Box, {
    paddingBlockEnd: "400"
  }, /*#__PURE__*/React.createElement(Card, {
    padding: "400"
  }, /*#__PURE__*/React.createElement(BlockStack, {
    gap: "400"
  }, /*#__PURE__*/React.createElement(Text, {
    variant: "headingMd",
    as: "h2"
  }, i18n.translate('title', I18N_SCOPE)), /*#__PURE__*/React.createElement(BlockStack, {
    gap: "200"
  }, /*#__PURE__*/React.createElement(Header, props.header), showDetailsSection && /*#__PURE__*/React.createElement(BlockStack, {
    gap: "200"
  }, /*#__PURE__*/React.createElement(Text, {
    variant: "headingSm",
    as: "h3"
  }, i18n.translate('details', I18N_SCOPE)), /*#__PURE__*/React.createElement(List, {
    type: "bullet"
  }, (_props$additionalDeta = props.additionalDetails) === null || _props$additionalDeta === void 0 ? void 0 : _props$additionalDeta.map(detail => /*#__PURE__*/React.createElement(List.Item, {
    key: detail.replace(/\s/g, '-')
  }, detail)), props.appliesToPurchaseType && /*#__PURE__*/React.createElement(AppliesToPurchaseType, props.appliesToPurchaseType), props.recurringPayment && /*#__PURE__*/React.createElement(RecurringPayment, props.recurringPayment), props.selectedCountries && /*#__PURE__*/React.createElement(SelectedCountries, props.selectedCountries), props.maximumShippingPrice && /*#__PURE__*/React.createElement(MaximumShippingPrice, props.maximumShippingPrice), props.minimumRequirements && /*#__PURE__*/React.createElement(MinimumRequirements, props.minimumRequirements), props.customerEligibility && /*#__PURE__*/React.createElement(CustomerEligibility, props.customerEligibility), props.usageLimits && /*#__PURE__*/React.createElement(UsageLimits, props.usageLimits), props.combinations && /*#__PURE__*/React.createElement(Combinations, props.combinations), props.activeDates && /*#__PURE__*/React.createElement(ActiveDates, props.activeDates)))), /*#__PURE__*/React.createElement(Performance, props.performance))));
}

export { SummaryCard };
